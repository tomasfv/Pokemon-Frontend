{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tomas\\\\HENRY\\\\PI\\\\PI-Pokemon-main\\\\client\\\\src\\\\components\\\\Home.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getPokemons, filterCreated, orderByName, filterType, getTypes, orderByAttack } from '../actions';\nimport { Link } from 'react-router-dom';\nimport Card from './Card';\nimport Paginado from './Paginado';\nimport SearchBar from './SearchBar';\nimport './Home.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n\n  const dispatch = useDispatch();\n  const allPokemons = useSelector(state => state.pokemons);\n  const types = useSelector(state => state.types); //PAGINADO.\n\n  const [currentPage, setCurrentPage] = useState(1); //La Home abre en la primera página\n\n  const [pokemonsPerPage, setPokemonsPerPage] = useState(12); //Quiero 12 pokemons por página\n\n  const [orden, setOrden] = useState(\"\");\n  const indexOfLastPokemon = currentPage * pokemonsPerPage; //12         //índice del último pokemon que tengo en la página\n\n  const indexOfFirstPokemon = indexOfLastPokemon - pokemonsPerPage; //0    //índice del primer pokemon\n\n  const currentPokemons = allPokemons.slice(indexOfFirstPokemon, indexOfLastPokemon); //pokemons en mi home. Array del estado.\n\n  const paginado = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n\n  useEffect(() => {\n    //Manejo de ciclos de vida\n    dispatch(getPokemons());\n  }, [dispatch]);\n\n  function handleClick(e) {\n    //Reset\n    e.preventDefault(); //preventDefault para que cuando recargue no se rompa todo.\n\n    dispatch(getPokemons());\n  }\n\n  ;\n\n  function handleFilterCreated(e) {\n    dispatch(filterCreated(e.target.value));\n  }\n\n  function handleFilterType(e) {\n    dispatch(filterType(e.target.value));\n  }\n\n  function handleSort(e) {\n    e.preventDefault();\n    dispatch(orderByName(e.target.value));\n    setCurrentPage(1);\n    setOrden(`Ordenado ${e.target.value}`);\n  }\n\n  function handleAttackSort(e) {\n    e.preventDefault();\n    dispatch(orderByAttack(e.target.value));\n    setCurrentPage(1);\n    setOrden(`Ordenado ${e.target.value}`);\n  }\n\n  useEffect(() => {\n    dispatch(getTypes());\n  }, [dispatch]);\n  return (\n    /*#__PURE__*/\n    //Renderizado del Componente\n    _jsxDEV(\"div\", {\n      className: \"prueba\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/pokemon\",\n        children: \"Crear Pok\\xE9mon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"NOMBRE DE LA WEB POKEMON\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => {\n          handleClick(e);\n        },\n        children: \"Volver a Cargar Todos Los Pokemons\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => handleSort(e),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"asc\",\n            children: \"Ascendente\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Desc\",\n            children: \"Descendente\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => handleAttackSort(e),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"asc\",\n            children: \"Mayor Ataque\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Desc\",\n            children: \"Menor Ataque\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => handleFilterCreated(e),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"All\",\n            children: \"Todos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"created\",\n            children: \"Creados\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"api\",\n            children: \"Existentes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => handleFilterType(e),\n          children: types.map(t => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: t.name,\n            children: t.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"blue\",\n          children: [/*#__PURE__*/_jsxDEV(Paginado, {\n            pokemonsPerPage: pokemonsPerPage,\n            allPokemons: allPokemons.length,\n            paginado: paginado\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(SearchBar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this), currentPokemons === null || currentPokemons === void 0 ? void 0 : currentPokemons.map(p => {\n          return /*#__PURE__*/_jsxDEV(\"fragment\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/home/\" + p.id,\n              children: [/*#__PURE__*/_jsxDEV(Card, {\n                className: \".blue\",\n                name: p.name,\n                image: p.img ? p.img : p.image,\n                types: p.createdInDb ? p.types.map(p => p.name + \" \") : p.type + \" \"\n              }, p.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 37\n              }, this), \"  \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 29\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)\n  );\n}\n\n_s(Home, \"3DbZK6IiUXNlBnRBfhEDMwtyXA0=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","useDispatch","useSelector","getPokemons","filterCreated","orderByName","filterType","getTypes","orderByAttack","Link","Card","Paginado","SearchBar","Home","dispatch","allPokemons","state","pokemons","types","currentPage","setCurrentPage","pokemonsPerPage","setPokemonsPerPage","orden","setOrden","indexOfLastPokemon","indexOfFirstPokemon","currentPokemons","slice","paginado","pageNumber","handleClick","e","preventDefault","handleFilterCreated","target","value","handleFilterType","handleSort","handleAttackSort","map","t","name","length","p","id","img","image","createdInDb","type"],"sources":["D:/Tomas/HENRY/PI/PI-Pokemon-main/client/src/components/Home.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getPokemons, filterCreated, orderByName, filterType, getTypes, orderByAttack } from '../actions';\r\nimport { Link } from 'react-router-dom';\r\nimport Card from './Card';\r\nimport Paginado from './Paginado';\r\nimport SearchBar from './SearchBar';\r\nimport './Home.css';\r\n\r\nexport default function Home(){\r\n    const dispatch = useDispatch();\r\n    const allPokemons = useSelector ((state) => state.pokemons);\r\n    const types = useSelector((state) => state.types);\r\n\r\n    //PAGINADO.\r\n    const [currentPage, setCurrentPage] = useState(1);                      //La Home abre en la primera página\r\n    const [pokemonsPerPage, setPokemonsPerPage] = useState(12);             //Quiero 12 pokemons por página\r\n    const [orden, setOrden] = useState(\"\");\r\n    const indexOfLastPokemon = currentPage * pokemonsPerPage   //12         //índice del último pokemon que tengo en la página\r\n    const indexOfFirstPokemon = indexOfLastPokemon - pokemonsPerPage //0    //índice del primer pokemon\r\n    const currentPokemons = allPokemons.slice(indexOfFirstPokemon, indexOfLastPokemon) //pokemons en mi home. Array del estado.\r\n\r\n    const paginado = (pageNumber) => {\r\n        setCurrentPage(pageNumber)\r\n    }\r\n\r\n\r\n    useEffect (() =>{                       //Manejo de ciclos de vida\r\n        dispatch(getPokemons());\r\n    }, [dispatch]);\r\n\r\n    function handleClick(e){            //Reset\r\n        e.preventDefault();             //preventDefault para que cuando recargue no se rompa todo.\r\n        dispatch(getPokemons())\r\n    };\r\n\r\n    function handleFilterCreated(e){\r\n        dispatch(filterCreated(e.target.value))\r\n    }\r\n\r\n    function handleFilterType(e){\r\n        dispatch(filterType(e.target.value))\r\n    }\r\n\r\n    function handleSort(e){\r\n        e.preventDefault();\r\n        dispatch(orderByName(e.target.value));\r\n        setCurrentPage(1);\r\n        setOrden(`Ordenado ${e.target.value}`)\r\n\r\n    }\r\n    function handleAttackSort(e){\r\n        e.preventDefault();\r\n        dispatch(orderByAttack(e.target.value));\r\n        setCurrentPage(1);\r\n        setOrden(`Ordenado ${e.target.value}`)\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getTypes());\r\n    }, [dispatch]);\r\n\r\n    return (                                            //Renderizado del Componente\r\n        <div className='prueba'>\r\n            <Link to='/pokemon'>Crear Pokémon</Link>\r\n            <h1>NOMBRE DE LA WEB POKEMON</h1>\r\n            <button onClick={ e => {handleClick(e)}}>\r\n                Volver a Cargar Todos Los Pokemons\r\n            </button>\r\n            <div>\r\n                <select onChange={e => handleSort(e)}>\r\n                    <option value='asc'>Ascendente</option>\r\n                    <option value='Desc'>Descendente</option>\r\n                </select>\r\n                <select onChange={e => handleAttackSort(e)}>\r\n                    <option value='asc'>Mayor Ataque</option>\r\n                    <option value='Desc'>Menor Ataque</option>\r\n                </select>\r\n                <select onChange={e => handleFilterCreated(e)}>\r\n                    <option value='All'>Todos</option>\r\n                    <option value='created'>Creados</option>\r\n                    <option value='api'>Existentes</option> \r\n                </select>\r\n                <select onChange={e => handleFilterType(e)}>\r\n                    {types.map((t) => (\r\n                            <option value={t.name}>{t.name}</option>\r\n                        ))}\r\n                </select>\r\n                <div className='blue'>\r\n\r\n                <Paginado\r\n                    pokemonsPerPage = {pokemonsPerPage}\r\n                    allPokemons = {allPokemons.length}\r\n                    paginado = {paginado}\r\n                />\r\n                <SearchBar/>  \r\n                </div>\r\n                    { currentPokemons?.map((p) => {     \r\n                        return (\r\n                            <fragment>\r\n                                <Link to={\"/home/\" + p.id}>\r\n                                    <Card className='.blue'\r\n                                        name={p.name} \r\n                                        image={p.img ? p.img : p.image} \r\n                                        types={p.createdInDb ? p.types.map(p => p.name + \" \") : p.type +\" \"} \r\n                                        key={p.id}\r\n                                    />  {/*Props de getApiInfo() en api/routes/index.js*/}\r\n                                </Link>\r\n                            </fragment>\r\n                            );\r\n                        })}\r\n            </div>\r\n        </div>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}