{"ast":null,"code":"const initialState = {\n  pokemons: [],\n  //tiene los de la api y db\n  allPokemons: [],\n  //estado que siempre tiene todos los pokemons\n  types: [],\n  detail: []\n};\n\nfunction rootReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  //el argumento action recibe la action despachada desde el actions creator.\n  switch (action.type) {\n    case \"GET_POKEMONS\":\n      return { ...state,\n        //copia de initialState\n        pokemons: action.payload,\n        //piso la info que contenia pokemons:[] con un nuevo render de todos los pokemons\n        allPokemons: action.payload //Estado para traer info original siempre. \n\n      };\n\n    case \"FILTER_CREATED\":\n      const fullPokemons = state.allPokemons;\n      const createdFilter = action.payload === 'created' ? //si el usuario selecciona created...\n      fullPokemons.filter(el => el.createdInDb) : //guarda en fullPokemons solo los que tengan la prop createdInDb\n      fullPokemons.filter(el => !el.createdInDb); //si selecciona otra cosa (api) guarda todos menos los creados en db\n\n      return { ...state,\n        pokemons: action.payload === 'All' ? //si selecciona All guarda en pokemons todos los pokemons...        \n        state.allPokemons : createdFilter //sino, guarda lo que haya en createdFilter (created/api)                \n\n      };\n\n    case \"FILTER_TYPE\":\n      let fullPokemons2 = state.allPokemons;\n      let resultApi = fullPokemons2.filter(p => p.type && p.type.includes(action.payload));\n      let resultDb = fullPokemons2.filter(p => p.types && p.types.map(t => t.name).includes(action.payload));\n      let result = resultApi.concat(resultDb);\n      return { ...state,\n        pokemons: result\n      };\n\n    case \"ORDER_BY_NAME\":\n      let sortedArr = action.payload === 'asc' ? state.pokemons.sort(function (a, b) {\n        if (a.name.toLowerCase() > b.name.toLowerCase()) {\n          return 1;\n        }\n\n        if (b.name.toLowerCase() > a.name.toLowerCase()) {\n          return -1;\n        }\n\n        return 0;\n      }) : state.pokemons.sort(function (a, b) {\n        if (a.name.toLowerCase() > b.name.toLowerCase()) {\n          return -1;\n        }\n\n        if (b.name.toLowerCase() > a.name.toLowerCase()) {\n          return 1;\n        }\n\n        return 0;\n      });\n      return { ...state,\n        pokemons: sortedArr\n      };\n\n    case \"ORDER_BY_ATTACK\":\n      let sortedAttack = action.payload === 'max' ? state.pokemons.sort(function (a, b) {\n        if (a.attack < b.attack) {\n          return 1;\n        }\n\n        if (b.attack < a.attack) {\n          return -1;\n        }\n\n        return 0;\n      }) : state.pokemons.sort(function (a, b) {\n        if (a.attack < b.attack) {\n          return -1;\n        }\n\n        if (b.attack < a.attack) {\n          return 1;\n        }\n\n        return 0;\n      });\n      return { ...state,\n        pokemons: sortedAttack\n      };\n\n    case \"GET_TYPES\":\n      return { ...state,\n        types: action.payload\n      };\n\n    case \"POST_POKEMON\":\n      return { ...state\n      };\n\n    case \"GET_DETAILS\":\n      return { ...state,\n        detail: action.payload\n      };\n\n    case \"CLEAN_DETAIL\":\n      return { ...state,\n        detail: []\n      };\n\n    case \"DELETE_POKEMON\":\n      let filtDb = state.allPokemons.filter(el => el.id !== action.payload); // let final = filtDb.filter(el => !el.action.payload)\n\n      console.log(action.payload);\n      return { ...state,\n        allPokemons: filtDb,\n        pokemons: filtDb\n      };\n\n    case \"GET_NAME_POKEMONS\":\n      return { ...state,\n        pokemons: action.payload\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default rootReducer;","map":{"version":3,"names":["initialState","pokemons","allPokemons","types","detail","rootReducer","state","action","type","payload","fullPokemons","createdFilter","filter","el","createdInDb","fullPokemons2","resultApi","p","includes","resultDb","map","t","name","result","concat","sortedArr","sort","a","b","toLowerCase","sortedAttack","attack","filtDb","id","console","log"],"sources":["D:/Tomas/HENRY/PI/PI-Pokemon-main/client/src/reducer/index.js"],"sourcesContent":["\r\nconst initialState = {\r\n    pokemons: [],                                       //tiene los de la api y db\r\n    allPokemons: [],                                    //estado que siempre tiene todos los pokemons\r\n    types: [],\r\n    detail: [],\r\n};\r\n\r\nfunction rootReducer(state = initialState, action) {    //el argumento action recibe la action despachada desde el actions creator.\r\n    switch(action.type) {\r\n        case \"GET_POKEMONS\":\r\n            return{\r\n                ...state,                               //copia de initialState\r\n                pokemons: action.payload,               //piso la info que contenia pokemons:[] con un nuevo render de todos los pokemons\r\n                allPokemons: action.payload             //Estado para traer info original siempre. \r\n            }\r\n        case \"FILTER_CREATED\":\r\n            const fullPokemons = state.allPokemons\r\n            const createdFilter = action.payload === 'created' ?    //si el usuario selecciona created...\r\n                    fullPokemons.filter(el => el.createdInDb) :     //guarda en fullPokemons solo los que tengan la prop createdInDb\r\n                    fullPokemons.filter(el => !el.createdInDb)      //si selecciona otra cosa (api) guarda todos menos los creados en db\r\n            return {\r\n                ...state,\r\n                pokemons: action.payload === 'All' ?            //si selecciona All guarda en pokemons todos los pokemons...        \r\n                            state.allPokemons : createdFilter   //sino, guarda lo que haya en createdFilter (created/api)                \r\n            }\r\n        case \"FILTER_TYPE\":\r\n            let fullPokemons2 = state.allPokemons\r\n            let resultApi = fullPokemons2.filter(p => p.type && p.type.includes(action.payload))\r\n            let resultDb = fullPokemons2.filter(p => p.types && p.types.map(t => t.name).includes(action.payload))\r\n            let result = resultApi.concat(resultDb)\r\n            return {\r\n                ...state,\r\n                pokemons: result\r\n            }\r\n\r\n        case \"ORDER_BY_NAME\":\r\n            let sortedArr = action.payload === 'asc' ?\r\n                state.pokemons.sort(function(a, b){\r\n                    if(a.name.toLowerCase() > b.name.toLowerCase()) {\r\n                        return 1;\r\n                    }\r\n                    if(b.name.toLowerCase() > a.name.toLowerCase()) {\r\n                        return -1;\r\n                    }\r\n                    return 0;\r\n                }) :\r\n                state.pokemons.sort(function(a, b){\r\n                    if(a.name.toLowerCase() > b.name.toLowerCase()) {\r\n                        return -1;\r\n                    }\r\n                    if(b.name.toLowerCase() > a.name.toLowerCase()) {\r\n                        return 1;\r\n                    }\r\n                    return 0;\r\n                })\r\n                return {\r\n                    ...state,\r\n                    pokemons: sortedArr\r\n                }\r\n        case \"ORDER_BY_ATTACK\":\r\n            let sortedAttack = action.payload === 'max' ?\r\n                state.pokemons.sort(function(a, b){\r\n                    if(a.attack < b.attack) {\r\n                        return 1;\r\n                    }\r\n                    if(b.attack < a.attack) {\r\n                        return -1;\r\n                    }\r\n                    return 0;\r\n                }) :\r\n                state.pokemons.sort(function(a, b){\r\n                    if(a.attack < b.attack) {\r\n                        return -1;\r\n                    }\r\n                    if(b.attack < a.attack) {\r\n                        return 1;\r\n                    }\r\n                    return 0;\r\n                })\r\n                return {\r\n                    ...state,\r\n                    pokemons: sortedAttack\r\n                }\r\n\r\n        case \"GET_TYPES\":\r\n            return{\r\n                ...state,\r\n                types: action.payload\r\n            }\r\n        case \"POST_POKEMON\":\r\n            return{\r\n                ...state,\r\n            }\r\n        case \"GET_DETAILS\":\r\n            return{\r\n                ...state,\r\n                detail: action.payload\r\n            }\r\n        case \"CLEAN_DETAIL\":\r\n            return{\r\n                ...state,\r\n                detail: []\r\n\r\n            }\r\n        case \"DELETE_POKEMON\":\r\n            \r\n            let filtDb = state.allPokemons.filter(el => el.id !== action.payload)\r\n            // let final = filtDb.filter(el => !el.action.payload)\r\n            console.log(action.payload)\r\n            return{\r\n                ...state,\r\n                allPokemons: filtDb,\r\n                pokemons: filtDb\r\n            }   \r\n        case \"GET_NAME_POKEMONS\":\r\n                return{\r\n                    ...state,\r\n                    pokemons: action.payload\r\n                }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default rootReducer;"],"mappings":"AACA,MAAMA,YAAY,GAAG;EACjBC,QAAQ,EAAE,EADO;EACmC;EACpDC,WAAW,EAAE,EAFI;EAEmC;EACpDC,KAAK,EAAE,EAHU;EAIjBC,MAAM,EAAE;AAJS,CAArB;;AAOA,SAASC,WAAT,GAAmD;EAAA,IAA9BC,KAA8B,uEAAtBN,YAAsB;EAAA,IAARO,MAAQ;;EAAK;EACpD,QAAOA,MAAM,CAACC,IAAd;IACI,KAAK,cAAL;MACI,OAAM,EACF,GAAGF,KADD;QACsC;QACxCL,QAAQ,EAAEM,MAAM,CAACE,OAFf;QAEsC;QACxCP,WAAW,EAAEK,MAAM,CAACE,OAHlB,CAGsC;;MAHtC,CAAN;;IAKJ,KAAK,gBAAL;MACI,MAAMC,YAAY,GAAGJ,KAAK,CAACJ,WAA3B;MACA,MAAMS,aAAa,GAAGJ,MAAM,CAACE,OAAP,KAAmB,SAAnB,GAAkC;MAChDC,YAAY,CAACE,MAAb,CAAoBC,EAAE,IAAIA,EAAE,CAACC,WAA7B,CADc,GACkC;MAChDJ,YAAY,CAACE,MAAb,CAAoBC,EAAE,IAAI,CAACA,EAAE,CAACC,WAA9B,CAFR,CAFJ,CAI4D;;MACxD,OAAO,EACH,GAAGR,KADA;QAEHL,QAAQ,EAAEM,MAAM,CAACE,OAAP,KAAmB,KAAnB,GAAsC;QACpCH,KAAK,CAACJ,WADR,GACsBS,aAH7B,CAG6C;;MAH7C,CAAP;;IAKJ,KAAK,aAAL;MACI,IAAII,aAAa,GAAGT,KAAK,CAACJ,WAA1B;MACA,IAAIc,SAAS,GAAGD,aAAa,CAACH,MAAd,CAAqBK,CAAC,IAAIA,CAAC,CAACT,IAAF,IAAUS,CAAC,CAACT,IAAF,CAAOU,QAAP,CAAgBX,MAAM,CAACE,OAAvB,CAApC,CAAhB;MACA,IAAIU,QAAQ,GAAGJ,aAAa,CAACH,MAAd,CAAqBK,CAAC,IAAIA,CAAC,CAACd,KAAF,IAAWc,CAAC,CAACd,KAAF,CAAQiB,GAAR,CAAYC,CAAC,IAAIA,CAAC,CAACC,IAAnB,EAAyBJ,QAAzB,CAAkCX,MAAM,CAACE,OAAzC,CAArC,CAAf;MACA,IAAIc,MAAM,GAAGP,SAAS,CAACQ,MAAV,CAAiBL,QAAjB,CAAb;MACA,OAAO,EACH,GAAGb,KADA;QAEHL,QAAQ,EAAEsB;MAFP,CAAP;;IAKJ,KAAK,eAAL;MACI,IAAIE,SAAS,GAAGlB,MAAM,CAACE,OAAP,KAAmB,KAAnB,GACZH,KAAK,CAACL,QAAN,CAAeyB,IAAf,CAAoB,UAASC,CAAT,EAAYC,CAAZ,EAAc;QAC9B,IAAGD,CAAC,CAACL,IAAF,CAAOO,WAAP,KAAuBD,CAAC,CAACN,IAAF,CAAOO,WAAP,EAA1B,EAAgD;UAC5C,OAAO,CAAP;QACH;;QACD,IAAGD,CAAC,CAACN,IAAF,CAAOO,WAAP,KAAuBF,CAAC,CAACL,IAAF,CAAOO,WAAP,EAA1B,EAAgD;UAC5C,OAAO,CAAC,CAAR;QACH;;QACD,OAAO,CAAP;MACH,CARD,CADY,GAUZvB,KAAK,CAACL,QAAN,CAAeyB,IAAf,CAAoB,UAASC,CAAT,EAAYC,CAAZ,EAAc;QAC9B,IAAGD,CAAC,CAACL,IAAF,CAAOO,WAAP,KAAuBD,CAAC,CAACN,IAAF,CAAOO,WAAP,EAA1B,EAAgD;UAC5C,OAAO,CAAC,CAAR;QACH;;QACD,IAAGD,CAAC,CAACN,IAAF,CAAOO,WAAP,KAAuBF,CAAC,CAACL,IAAF,CAAOO,WAAP,EAA1B,EAAgD;UAC5C,OAAO,CAAP;QACH;;QACD,OAAO,CAAP;MACH,CARD,CAVJ;MAmBI,OAAO,EACH,GAAGvB,KADA;QAEHL,QAAQ,EAAEwB;MAFP,CAAP;;IAIR,KAAK,iBAAL;MACI,IAAIK,YAAY,GAAGvB,MAAM,CAACE,OAAP,KAAmB,KAAnB,GACfH,KAAK,CAACL,QAAN,CAAeyB,IAAf,CAAoB,UAASC,CAAT,EAAYC,CAAZ,EAAc;QAC9B,IAAGD,CAAC,CAACI,MAAF,GAAWH,CAAC,CAACG,MAAhB,EAAwB;UACpB,OAAO,CAAP;QACH;;QACD,IAAGH,CAAC,CAACG,MAAF,GAAWJ,CAAC,CAACI,MAAhB,EAAwB;UACpB,OAAO,CAAC,CAAR;QACH;;QACD,OAAO,CAAP;MACH,CARD,CADe,GAUfzB,KAAK,CAACL,QAAN,CAAeyB,IAAf,CAAoB,UAASC,CAAT,EAAYC,CAAZ,EAAc;QAC9B,IAAGD,CAAC,CAACI,MAAF,GAAWH,CAAC,CAACG,MAAhB,EAAwB;UACpB,OAAO,CAAC,CAAR;QACH;;QACD,IAAGH,CAAC,CAACG,MAAF,GAAWJ,CAAC,CAACI,MAAhB,EAAwB;UACpB,OAAO,CAAP;QACH;;QACD,OAAO,CAAP;MACH,CARD,CAVJ;MAmBI,OAAO,EACH,GAAGzB,KADA;QAEHL,QAAQ,EAAE6B;MAFP,CAAP;;IAKR,KAAK,WAAL;MACI,OAAM,EACF,GAAGxB,KADD;QAEFH,KAAK,EAAEI,MAAM,CAACE;MAFZ,CAAN;;IAIJ,KAAK,cAAL;MACI,OAAM,EACF,GAAGH;MADD,CAAN;;IAGJ,KAAK,aAAL;MACI,OAAM,EACF,GAAGA,KADD;QAEFF,MAAM,EAAEG,MAAM,CAACE;MAFb,CAAN;;IAIJ,KAAK,cAAL;MACI,OAAM,EACF,GAAGH,KADD;QAEFF,MAAM,EAAE;MAFN,CAAN;;IAKJ,KAAK,gBAAL;MAEI,IAAI4B,MAAM,GAAG1B,KAAK,CAACJ,WAAN,CAAkBU,MAAlB,CAAyBC,EAAE,IAAIA,EAAE,CAACoB,EAAH,KAAU1B,MAAM,CAACE,OAAhD,CAAb,CAFJ,CAGI;;MACAyB,OAAO,CAACC,GAAR,CAAY5B,MAAM,CAACE,OAAnB;MACA,OAAM,EACF,GAAGH,KADD;QAEFJ,WAAW,EAAE8B,MAFX;QAGF/B,QAAQ,EAAE+B;MAHR,CAAN;;IAKJ,KAAK,mBAAL;MACQ,OAAM,EACF,GAAG1B,KADD;QAEFL,QAAQ,EAAEM,MAAM,CAACE;MAFf,CAAN;;IAKR;MACI,OAAOH,KAAP;EAjHR;AAmHH;;AAED,eAAeD,WAAf"},"metadata":{},"sourceType":"module"}