{"ast":null,"code":"import axios from 'axios';\nexport function getPokemons() {\n  return async function (dispatch) {\n    //Acá es donde sucede toda la conexión entre el Front y el Back.\n    var json = await axios.get(\"/pokemons\", {}); //ruta del back que me muestra todos los pokemons http://localhost:3001/pokemons\n\n    return dispatch({\n      type: 'GET_POKEMONS',\n      payload: json.data\n    });\n  };\n} // export function getPokemons(){                  \n//     return async function(dispatch){\n//         return fetch('http://localhost:3001/pokemons')      //Request GET a la Api por medio de la ruta del back\n//         .then(response => response.json())                  //con .then capturo la respuesta del fetch. que es un obj .json y lo convierto en obj .js\n//         .then(info => {                                     //info es un argumento custom, y va a contener el valor del obj response ya convertido a .js\n//             dispatch({type: 'GET_POKEMONS', payload: info}) //Despacha la action GET_POKEMONS con el obj response.js como payload\n//         })\n//     }\n// }\n\nexport function getNamePokemons(name) {\n  return async function (dispatch) {\n    try {\n      var json = await axios.get(\"/pokemons?name=\" + name);\n      return dispatch({\n        type: \"GET_NAME_POKEMONS\",\n        payload: json.data\n      });\n    } catch (error) {\n      return alert('No se encontró el Pokémon');\n    }\n  };\n}\nexport function getTypes() {\n  //hace un request GET al back y trae todos los tipos de pokemon desde la db\n  return async function (dispatch) {\n    var info = await axios.get(\"/types\", {}); //trae [{id: 1, name: fighting}, {id:2, name: normal}, ...]\n\n    return dispatch({\n      type: \"GET_TYPES\",\n      //Despacha la action GET_TYPES con el array de objetos en formato .js\n      payload: info.data //info.data será lo que me trajo el axios ya en formato Javascript\n\n    });\n  };\n}\nexport function postPokemon(payload) {\n  return async function (dispatch) {\n    const response = await axios.post(\"/pokemons\", payload);\n    return response;\n  };\n}\nexport function filterCreated(payload) {\n  return {\n    type: \"FILTER_CREATED\",\n    //Despacha la accion \"FILTER_CREATED\"\n    payload //El payload será lo que el usuario seleccione en el filtro.\n\n  };\n}\nexport function filterType(payload) {\n  return {\n    type: \"FILTER_TYPE\",\n    payload\n  };\n}\nexport function orderByName(payload) {\n  return {\n    type: \"ORDER_BY_NAME\",\n    payload\n  };\n}\nexport function orderByAttack(payload) {\n  return {\n    type: \"ORDER_BY_ATTACK\",\n    payload\n  };\n}\nexport function getDetail(id) {\n  return async function (dispatch) {\n    try {\n      var json = await axios.get('/pokemons/' + id);\n      return dispatch({\n        type: \"GET_DETAILS\",\n        payload: json.data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}\nexport function cleanDetail() {\n  return {\n    type: \"CLEAN_DETAIL\"\n  };\n}","map":{"version":3,"names":["axios","getPokemons","dispatch","json","get","type","payload","data","getNamePokemons","name","error","alert","getTypes","info","postPokemon","response","post","filterCreated","filterType","orderByName","orderByAttack","getDetail","id","console","log","cleanDetail"],"sources":["D:/Tomas/HENRY/PI/PI-Pokemon-main/client/src/actions/index.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nexport function getPokemons(){\r\n    return async function(dispatch){    //Acá es donde sucede toda la conexión entre el Front y el Back.\r\n        var json = await axios.get(\"/pokemons\", {});  //ruta del back que me muestra todos los pokemons http://localhost:3001/pokemons\r\n        return dispatch({\r\n            type: 'GET_POKEMONS',\r\n            payload: json.data\r\n        })\r\n    }\r\n}\r\n\r\n// export function getPokemons(){                  \r\n//     return async function(dispatch){\r\n//         return fetch('http://localhost:3001/pokemons')      //Request GET a la Api por medio de la ruta del back\r\n//         .then(response => response.json())                  //con .then capturo la respuesta del fetch. que es un obj .json y lo convierto en obj .js\r\n//         .then(info => {                                     //info es un argumento custom, y va a contener el valor del obj response ya convertido a .js\r\n//             dispatch({type: 'GET_POKEMONS', payload: info}) //Despacha la action GET_POKEMONS con el obj response.js como payload\r\n//         })\r\n//     }\r\n// }\r\n\r\nexport function getNamePokemons(name){\r\n    return async function (dispatch){\r\n        try{\r\n            var json = await axios.get(\"/pokemons?name=\" + name);\r\n            return dispatch({\r\n                type: \"GET_NAME_POKEMONS\",\r\n                payload: json.data\r\n            })\r\n        }catch(error){\r\n            return alert ('No se encontró el Pokémon')\r\n        }\r\n    }\r\n}\r\n\r\nexport function getTypes(){                 //hace un request GET al back y trae todos los tipos de pokemon desde la db\r\n    return async function(dispatch){\r\n        var info = await axios.get(\"/types\", {});  //trae [{id: 1, name: fighting}, {id:2, name: normal}, ...]\r\n        return dispatch({\r\n            type: \"GET_TYPES\",              //Despacha la action GET_TYPES con el array de objetos en formato .js\r\n            payload: info.data           //info.data será lo que me trajo el axios ya en formato Javascript\r\n        })\r\n    }\r\n}\r\n\r\nexport function postPokemon(payload){\r\n    return async function(dispatch){\r\n        const response = await axios.post(\"/pokemons\", payload);\r\n        return response;\r\n    }\r\n}\r\n\r\nexport function filterCreated(payload){         \r\n    return{\r\n        type: \"FILTER_CREATED\",         //Despacha la accion \"FILTER_CREATED\"\r\n        payload,                        //El payload será lo que el usuario seleccione en el filtro.\r\n    }\r\n}\r\n\r\nexport function filterType(payload){\r\n    \r\n    return{\r\n        type: \"FILTER_TYPE\",\r\n        payload,\r\n    }\r\n}\r\n\r\nexport function orderByName(payload){\r\n    return { \r\n        type: \"ORDER_BY_NAME\",\r\n        payload\r\n    }\r\n}\r\n\r\nexport function orderByAttack(payload){\r\n    return {\r\n        type: \"ORDER_BY_ATTACK\",\r\n        payload\r\n    }\r\n}\r\n\r\nexport function getDetail(id){\r\n    return async function(dispatch){\r\n        try{\r\n            var json = await axios.get('/pokemons/' + id);\r\n            return dispatch({ type: \"GET_DETAILS\", payload: json.data })\r\n        }catch(error){\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\nexport function cleanDetail(){\r\n    return {\r\n        type: \"CLEAN_DETAIL\"\r\n    }\r\n}"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,SAASC,WAAT,GAAsB;EACzB,OAAO,gBAAeC,QAAf,EAAwB;IAAK;IAChC,IAAIC,IAAI,GAAG,MAAMH,KAAK,CAACI,GAAN,CAAU,WAAV,EAAuB,EAAvB,CAAjB,CAD2B,CACmB;;IAC9C,OAAOF,QAAQ,CAAC;MACZG,IAAI,EAAE,cADM;MAEZC,OAAO,EAAEH,IAAI,CAACI;IAFF,CAAD,CAAf;EAIH,CAND;AAOH,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,eAAT,CAAyBC,IAAzB,EAA8B;EACjC,OAAO,gBAAgBP,QAAhB,EAAyB;IAC5B,IAAG;MACC,IAAIC,IAAI,GAAG,MAAMH,KAAK,CAACI,GAAN,CAAU,oBAAoBK,IAA9B,CAAjB;MACA,OAAOP,QAAQ,CAAC;QACZG,IAAI,EAAE,mBADM;QAEZC,OAAO,EAAEH,IAAI,CAACI;MAFF,CAAD,CAAf;IAIH,CAND,CAMC,OAAMG,KAAN,EAAY;MACT,OAAOC,KAAK,CAAE,2BAAF,CAAZ;IACH;EACJ,CAVD;AAWH;AAED,OAAO,SAASC,QAAT,GAAmB;EAAkB;EACxC,OAAO,gBAAeV,QAAf,EAAwB;IAC3B,IAAIW,IAAI,GAAG,MAAMb,KAAK,CAACI,GAAN,CAAU,QAAV,EAAoB,EAApB,CAAjB,CAD2B,CACgB;;IAC3C,OAAOF,QAAQ,CAAC;MACZG,IAAI,EAAE,WADM;MACoB;MAChCC,OAAO,EAAEO,IAAI,CAACN,IAFF,CAEiB;;IAFjB,CAAD,CAAf;EAIH,CAND;AAOH;AAED,OAAO,SAASO,WAAT,CAAqBR,OAArB,EAA6B;EAChC,OAAO,gBAAeJ,QAAf,EAAwB;IAC3B,MAAMa,QAAQ,GAAG,MAAMf,KAAK,CAACgB,IAAN,CAAW,WAAX,EAAwBV,OAAxB,CAAvB;IACA,OAAOS,QAAP;EACH,CAHD;AAIH;AAED,OAAO,SAASE,aAAT,CAAuBX,OAAvB,EAA+B;EAClC,OAAM;IACFD,IAAI,EAAE,gBADJ;IAC8B;IAChCC,OAFE,CAE8B;;EAF9B,CAAN;AAIH;AAED,OAAO,SAASY,UAAT,CAAoBZ,OAApB,EAA4B;EAE/B,OAAM;IACFD,IAAI,EAAE,aADJ;IAEFC;EAFE,CAAN;AAIH;AAED,OAAO,SAASa,WAAT,CAAqBb,OAArB,EAA6B;EAChC,OAAO;IACHD,IAAI,EAAE,eADH;IAEHC;EAFG,CAAP;AAIH;AAED,OAAO,SAASc,aAAT,CAAuBd,OAAvB,EAA+B;EAClC,OAAO;IACHD,IAAI,EAAE,iBADH;IAEHC;EAFG,CAAP;AAIH;AAED,OAAO,SAASe,SAAT,CAAmBC,EAAnB,EAAsB;EACzB,OAAO,gBAAepB,QAAf,EAAwB;IAC3B,IAAG;MACC,IAAIC,IAAI,GAAG,MAAMH,KAAK,CAACI,GAAN,CAAU,eAAekB,EAAzB,CAAjB;MACA,OAAOpB,QAAQ,CAAC;QAAEG,IAAI,EAAE,aAAR;QAAuBC,OAAO,EAAEH,IAAI,CAACI;MAArC,CAAD,CAAf;IACH,CAHD,CAGC,OAAMG,KAAN,EAAY;MACTa,OAAO,CAACC,GAAR,CAAYd,KAAZ;IACH;EACJ,CAPD;AAQH;AAED,OAAO,SAASe,WAAT,GAAsB;EACzB,OAAO;IACHpB,IAAI,EAAE;EADH,CAAP;AAGH"},"metadata":{},"sourceType":"module"}